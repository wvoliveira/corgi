basePath: /
definitions:
  jwt.Token:
    properties:
      created_at:
        type: string
      id:
        type: integer
      identifier:
        type: string
      mobile:
        type: boolean
      updated_at:
        type: string
    type: object
  url.PostURL:
    properties:
      keyword:
        example: google
        type: string
      title:
        example: Google Home
        type: string
      url:
        example: https://www.google.com
        type: string
    type: object
  url.URL:
    properties:
      active:
        example: false
        type: boolean
      created_at:
        example: "2021-10-18T00:45:07.818344164-03:00"
        type: string
      id:
        example: eed7df28-5a16-46f0-b5bf-c26071a42ade
        type: string
      keyword:
        example: google
        type: string
      owner_id:
        example: 5ca04a43-ff3c-4154-a8ad-02e2e906a847
        type: string
      title:
        example: Google Home
        type: string
      updated_at:
        example: "2021-10-18T00:49:06.160059334-03:00"
        type: string
      url:
        example: https://www.google.com
        type: string
    type: object
  user.PostUser:
    properties:
      keyword:
        example: google
        type: string
      title:
        example: Google Home
        type: string
      user:
        example: https://www.google.com
        type: string
    type: object
  user.User:
    properties:
      active:
        example: false
        type: boolean
      created_at:
        example: "2021-10-18T00:45:07.818344164-03:00"
        type: string
      email:
        example: oliveira@live.it
        type: string
      id:
        example: eed7df28-5a16-46f0-b5bf-c26071a42ade
        type: string
      last_login:
        example: "2021-10-20T00:50:00.100059334-03:00"
        type: string
      name:
        example: Wellington Oliveira
        type: string
      roles:
        items:
          type: string
        type: array
      token:
        items:
          $ref: '#/definitions/jwt.Token'
        type: array
      updated_at:
        example: "2021-10-18T00:49:06.160059334-03:00"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@elga.io
    name: API Support
  description: Micro-serice for managing URL
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://elga.io/terms
  title: URL API
  version: 0.0.1
paths:
  /url/v1/urls:
    get:
      consumes:
      - application/json
      description: Get details of all URLs
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Quantity of items
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/url.URL'
            type: array
      summary: Get details of all URLs
      tags:
      - URL
    post:
      consumes:
      - application/json
      description: Add a new URL
      parameters:
      - description: URL struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/url.PostURL'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Add a new URL
      tags:
      - URL
  /url/v1/urls/{id}:
    delete:
      consumes:
      - application/json
      description: Delete URL item
      parameters:
      - description: URL ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete URL item
      tags:
      - URL
    get:
      consumes:
      - application/json
      description: Get URL by ID
      parameters:
      - description: URL ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: ""
      summary: Get an URL
      tags:
      - URL
    patch:
      consumes:
      - application/json
      description: Change URL item
      parameters:
      - description: URL ID
        in: path
        name: id
        required: true
        type: string
      - description: URL struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/url.PostURL'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Change URL item
      tags:
      - URL
    put:
      consumes:
      - application/json
      description: Change or create URL item
      parameters:
      - description: URL ID
        in: path
        name: id
        required: true
        type: string
      - description: URL struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/url.PostURL'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Change or create URL item
      tags:
      - URL
  /user/v1/users:
    get:
      consumes:
      - application/json
      description: Get details of all Users
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Quantity of items
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      summary: Get details of all Users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Add a new User
      parameters:
      - description: User struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.PostUser'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Add a new User
      tags:
      - User
  /user/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User item
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete User item
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: ""
      summary: Get an User
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Change User item
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.PostUser'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Change User item
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Change or create User item
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.PostUser'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Change or create User item
      tags:
      - User
swagger: "2.0"
