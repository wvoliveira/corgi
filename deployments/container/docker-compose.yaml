version: '3.8'

volumes:
  postgres_data:
  prometheus_data:
  loki_data:
  grafana_data:

services:
  corgi:
    image: wvoliveira/corgi:0.0.1
    restart: unless-stopped
    ports:
      - "8081-8082:8081"
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
    environment:
      CORGI_LOG_LEVEL: debug
      CORGI_SECRET_KEY: CHANGE_FOR_SOMETHING_MORE_SECURITY
      CORGI_REDIRECT_URL: http://127.0.0.1:8081

      CORGI_DB_URL: postgres://user:password@db:5432/corgi?sslmode=disable
      CORGI_CACHE_URL: redis://:password@cache:6379/0

      CORGI_SERVER_HTTP_PORT: 8081
      CORGI_SERVER_READ_TIMEOUT: 10
      CORGI_SERVER_WRITE_TIMEOUT: 10

      CORGI_DOMAIN_DEFAULT: localhost:8081
      CORGI_DOMAIN_ALTERNATIVES:
    depends_on:
      - db
      - cache
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8081/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  db:
    image: postgres:15.1
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: corgi
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  db-admin:
    image: adminer:4.8.1
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  migrate:
    image: migrate/migrate:v4.15.2
    volumes:
      - ../../migrations:/migrations:ro
    command: >
      -path=/migrations/ -database postgres://user:password@db:5432/corgi?sslmode=disable up
    depends_on:
      - db

  cache:
    image: redis:7.0.8
    restart: unless-stopped
    command: >
      --requirepass password
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  prometheus:
    image: prom/prometheus:v2.42.0
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  loki:
    image: grafana/loki:2.7.3
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  promtail:
    image: grafana/promtail:2.7.3
    restart: unless-stopped
    ports:
      - "9080:9080"
    volumes:
      - ./configs/promtail.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:9.3.6
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/plugins-community/redis-datasource/release/2.1.1/redis-datasource-2.1.1.zip;redis-datasource
    volumes:
      - ./configs/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana:rw
    user: "104"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
